### Generated by build.sh ###
# target: arm (target-arm)
TARGETCFLAGS_arm=$(CFLAGS) -I$(QEMUROOT)/target-arm -DNEED_CPU_H -w -DTARGET=arm -DTARGET_ARM
RENAME_SYMBOLS_arm=--redefine-sym dis_size=arm_dis_size --redefine-sym gen_opc_instr_start=arm_gen_opc_instr_start --redefine-sym gen_opc_pc=arm_gen_opc_pc --redefine-sym tcg_ctx=arm_tcg_ctx --redefine-sym dis_offset=arm_dis_offset --redefine-sym gen_opc_icount=arm_gen_opc_icount --redefine-sym dis_memory=arm_dis_memory --redefine-sym dis_fault=arm_dis_fault
translate-arm.o: $(QEMUROOT)/target-arm/translate.c
	$(CC) $(TARGETCFLAGS_arm) $(QEMUROOT)/target-arm/translate.c -c -o translate-arm.o
tcg-arm.o: $(QEMUROOT)/tcg/tcg.c
	$(CC) $(TARGETCFLAGS_arm) $(QEMUROOT)/tcg/tcg.c -c -o tcg-arm.o
optimize-arm.o: $(QEMUROOT)/tcg/optimize.c
	$(CC) $(TARGETCFLAGS_arm) $(QEMUROOT)/tcg/optimize.c -c -o optimize-arm.o
arm-dis-arm.o: $(QEMUROOT)/arm-dis.c
	$(CC) $(TARGETCFLAGS_arm) $(QEMUROOT)/arm-dis.c -c -o arm-dis-arm.o
qemu-stubs-arm.o: qemu-stubs.c
	$(CC) $(TARGETCFLAGS_arm) qemu-stubs.c -c -o qemu-stubs-arm.o
target-arm-arm.o: target-arm.c
	$(CC) $(TARGETCFLAGS_arm) target-arm.c -c -o target-arm-arm.o
arm-unstripped.o: translate-arm.o tcg-arm.o optimize-arm.o arm-dis-arm.o qemu-stubs-arm.o target-arm-arm.o
	$(LD) -r translate-arm.o tcg-arm.o optimize-arm.o arm-dis-arm.o qemu-stubs-arm.o target-arm-arm.o -o arm-unstripped.o
arm-module.o: arm-unstripped.o
	$(OBJCOPY) -G arm_create $(RENAME_SYMBOLS_arm) arm-unstripped.o arm-module.o

# target: x86_32 (target-i386)
TARGETCFLAGS_x86_32=$(CFLAGS) -I$(QEMUROOT)/target-i386 -DNEED_CPU_H -w -DTARGET=x86_32 -DTARGET_I386
RENAME_SYMBOLS_x86_32=--redefine-sym dis_size=x86_32_dis_size --redefine-sym gen_opc_instr_start=x86_32_gen_opc_instr_start --redefine-sym gen_opc_pc=x86_32_gen_opc_pc --redefine-sym tcg_ctx=x86_32_tcg_ctx --redefine-sym dis_offset=x86_32_dis_offset --redefine-sym gen_opc_icount=x86_32_gen_opc_icount --redefine-sym dis_memory=x86_32_dis_memory --redefine-sym dis_fault=x86_32_dis_fault
translate-x86_32.o: $(QEMUROOT)/target-i386/translate.c
	$(CC) $(TARGETCFLAGS_x86_32) $(QEMUROOT)/target-i386/translate.c -c -o translate-x86_32.o
tcg-x86_32.o: $(QEMUROOT)/tcg/tcg.c
	$(CC) $(TARGETCFLAGS_x86_32) $(QEMUROOT)/tcg/tcg.c -c -o tcg-x86_32.o
optimize-x86_32.o: $(QEMUROOT)/tcg/optimize.c
	$(CC) $(TARGETCFLAGS_x86_32) $(QEMUROOT)/tcg/optimize.c -c -o optimize-x86_32.o
i386-dis-x86_32.o: $(QEMUROOT)/i386-dis.c
	$(CC) $(TARGETCFLAGS_x86_32) $(QEMUROOT)/i386-dis.c -c -o i386-dis-x86_32.o
qemu-stubs-x86_32.o: qemu-stubs.c
	$(CC) $(TARGETCFLAGS_x86_32) qemu-stubs.c -c -o qemu-stubs-x86_32.o
target-i386-x86_32.o: target-i386.c
	$(CC) $(TARGETCFLAGS_x86_32) target-i386.c -c -o target-i386-x86_32.o
x86_32-unstripped.o: translate-x86_32.o tcg-x86_32.o optimize-x86_32.o i386-dis-x86_32.o qemu-stubs-x86_32.o target-i386-x86_32.o
	$(LD) -r translate-x86_32.o tcg-x86_32.o optimize-x86_32.o i386-dis-x86_32.o qemu-stubs-x86_32.o target-i386-x86_32.o -o x86_32-unstripped.o
x86_32-module.o: x86_32-unstripped.o
	$(OBJCOPY) -G x86_32_create $(RENAME_SYMBOLS_x86_32) x86_32-unstripped.o x86_32-module.o

# target: x86_64 (target-i386)
TARGETCFLAGS_x86_64=$(CFLAGS) -I$(QEMUROOT)/target-i386 -DNEED_CPU_H -w -DTARGET=x86_64 -DTARGET_I386 -DTARGET_X86_64
RENAME_SYMBOLS_x86_64=--redefine-sym dis_size=x86_64_dis_size --redefine-sym gen_opc_instr_start=x86_64_gen_opc_instr_start --redefine-sym gen_opc_pc=x86_64_gen_opc_pc --redefine-sym tcg_ctx=x86_64_tcg_ctx --redefine-sym dis_offset=x86_64_dis_offset --redefine-sym gen_opc_icount=x86_64_gen_opc_icount --redefine-sym dis_memory=x86_64_dis_memory --redefine-sym dis_fault=x86_64_dis_fault
translate-x86_64.o: $(QEMUROOT)/target-i386/translate.c
	$(CC) $(TARGETCFLAGS_x86_64) $(QEMUROOT)/target-i386/translate.c -c -o translate-x86_64.o
tcg-x86_64.o: $(QEMUROOT)/tcg/tcg.c
	$(CC) $(TARGETCFLAGS_x86_64) $(QEMUROOT)/tcg/tcg.c -c -o tcg-x86_64.o
optimize-x86_64.o: $(QEMUROOT)/tcg/optimize.c
	$(CC) $(TARGETCFLAGS_x86_64) $(QEMUROOT)/tcg/optimize.c -c -o optimize-x86_64.o
i386-dis-x86_64.o: $(QEMUROOT)/i386-dis.c
	$(CC) $(TARGETCFLAGS_x86_64) $(QEMUROOT)/i386-dis.c -c -o i386-dis-x86_64.o
qemu-stubs-x86_64.o: qemu-stubs.c
	$(CC) $(TARGETCFLAGS_x86_64) qemu-stubs.c -c -o qemu-stubs-x86_64.o
target-i386-x86_64.o: target-i386.c
	$(CC) $(TARGETCFLAGS_x86_64) target-i386.c -c -o target-i386-x86_64.o
x86_64-unstripped.o: translate-x86_64.o tcg-x86_64.o optimize-x86_64.o i386-dis-x86_64.o qemu-stubs-x86_64.o target-i386-x86_64.o
	$(LD) -r translate-x86_64.o tcg-x86_64.o optimize-x86_64.o i386-dis-x86_64.o qemu-stubs-x86_64.o target-i386-x86_64.o -o x86_64-unstripped.o
x86_64-module.o: x86_64-unstripped.o
	$(OBJCOPY) -G x86_64_create $(RENAME_SYMBOLS_x86_64) x86_64-unstripped.o x86_64-module.o

# target: mips_64 (target-mips)
TARGETCFLAGS_mips_64=$(CFLAGS) -I$(QEMUROOT)/target-mips -DNEED_CPU_H -w -DTARGET=mips_64 -DTARGET_MIPS -DTARGET_MIPS64
RENAME_SYMBOLS_mips_64=--redefine-sym dis_size=mips_64_dis_size --redefine-sym gen_opc_instr_start=mips_64_gen_opc_instr_start --redefine-sym gen_opc_pc=mips_64_gen_opc_pc --redefine-sym tcg_ctx=mips_64_tcg_ctx --redefine-sym dis_offset=mips_64_dis_offset --redefine-sym gen_opc_icount=mips_64_gen_opc_icount --redefine-sym dis_memory=mips_64_dis_memory --redefine-sym dis_fault=mips_64_dis_fault
translate-mips_64.o: $(QEMUROOT)/target-mips/translate.c
	$(CC) $(TARGETCFLAGS_mips_64) $(QEMUROOT)/target-mips/translate.c -c -o translate-mips_64.o
tcg-mips_64.o: $(QEMUROOT)/tcg/tcg.c
	$(CC) $(TARGETCFLAGS_mips_64) $(QEMUROOT)/tcg/tcg.c -c -o tcg-mips_64.o
optimize-mips_64.o: $(QEMUROOT)/tcg/optimize.c
	$(CC) $(TARGETCFLAGS_mips_64) $(QEMUROOT)/tcg/optimize.c -c -o optimize-mips_64.o
mips-dis-mips_64.o: $(QEMUROOT)/mips-dis.c
	$(CC) $(TARGETCFLAGS_mips_64) $(QEMUROOT)/mips-dis.c -c -o mips-dis-mips_64.o
qemu-stubs-mips_64.o: qemu-stubs.c
	$(CC) $(TARGETCFLAGS_mips_64) qemu-stubs.c -c -o qemu-stubs-mips_64.o
target-mips-mips_64.o: target-mips.c
	$(CC) $(TARGETCFLAGS_mips_64) target-mips.c -c -o target-mips-mips_64.o
mips_64-unstripped.o: translate-mips_64.o tcg-mips_64.o optimize-mips_64.o mips-dis-mips_64.o qemu-stubs-mips_64.o target-mips-mips_64.o
	$(LD) -r translate-mips_64.o tcg-mips_64.o optimize-mips_64.o mips-dis-mips_64.o qemu-stubs-mips_64.o target-mips-mips_64.o -o mips_64-unstripped.o
mips_64-module.o: mips_64-unstripped.o
	$(OBJCOPY) -G mips_64_create $(RENAME_SYMBOLS_mips_64) mips_64-unstripped.o mips_64-module.o

# target: ppc_32 (target-ppc)
TARGETCFLAGS_ppc_32=$(CFLAGS) -I$(QEMUROOT)/target-ppc -DNEED_CPU_H -w -DTARGET=ppc_32 -DTARGET_PPC
RENAME_SYMBOLS_ppc_32=--redefine-sym dis_size=ppc_32_dis_size --redefine-sym gen_opc_instr_start=ppc_32_gen_opc_instr_start --redefine-sym gen_opc_pc=ppc_32_gen_opc_pc --redefine-sym tcg_ctx=ppc_32_tcg_ctx --redefine-sym dis_offset=ppc_32_dis_offset --redefine-sym gen_opc_icount=ppc_32_gen_opc_icount --redefine-sym dis_memory=ppc_32_dis_memory --redefine-sym dis_fault=ppc_32_dis_fault
translate-ppc_32.o: $(QEMUROOT)/target-ppc/translate.c
	$(CC) $(TARGETCFLAGS_ppc_32) $(QEMUROOT)/target-ppc/translate.c -c -o translate-ppc_32.o
tcg-ppc_32.o: $(QEMUROOT)/tcg/tcg.c
	$(CC) $(TARGETCFLAGS_ppc_32) $(QEMUROOT)/tcg/tcg.c -c -o tcg-ppc_32.o
optimize-ppc_32.o: $(QEMUROOT)/tcg/optimize.c
	$(CC) $(TARGETCFLAGS_ppc_32) $(QEMUROOT)/tcg/optimize.c -c -o optimize-ppc_32.o
ppc-dis-ppc_32.o: $(QEMUROOT)/ppc-dis.c
	$(CC) $(TARGETCFLAGS_ppc_32) $(QEMUROOT)/ppc-dis.c -c -o ppc-dis-ppc_32.o
qemu-stubs-ppc_32.o: qemu-stubs.c
	$(CC) $(TARGETCFLAGS_ppc_32) qemu-stubs.c -c -o qemu-stubs-ppc_32.o
target-ppc-ppc_32.o: target-ppc.c
	$(CC) $(TARGETCFLAGS_ppc_32) target-ppc.c -c -o target-ppc-ppc_32.o
ppc_32-unstripped.o: translate-ppc_32.o tcg-ppc_32.o optimize-ppc_32.o ppc-dis-ppc_32.o qemu-stubs-ppc_32.o target-ppc-ppc_32.o
	$(LD) -r translate-ppc_32.o tcg-ppc_32.o optimize-ppc_32.o ppc-dis-ppc_32.o qemu-stubs-ppc_32.o target-ppc-ppc_32.o -o ppc_32-unstripped.o
ppc_32-module.o: ppc_32-unstripped.o
	$(OBJCOPY) -G ppc_32_create $(RENAME_SYMBOLS_ppc_32) ppc_32-unstripped.o ppc_32-module.o

# target: ppc_64 (target-ppc)
TARGETCFLAGS_ppc_64=$(CFLAGS) -I$(QEMUROOT)/target-ppc -DNEED_CPU_H -w -DTARGET=ppc_64 -DTARGET_PPC -DTARGET_PPC64
RENAME_SYMBOLS_ppc_64=--redefine-sym dis_size=ppc_64_dis_size --redefine-sym gen_opc_instr_start=ppc_64_gen_opc_instr_start --redefine-sym gen_opc_pc=ppc_64_gen_opc_pc --redefine-sym tcg_ctx=ppc_64_tcg_ctx --redefine-sym dis_offset=ppc_64_dis_offset --redefine-sym gen_opc_icount=ppc_64_gen_opc_icount --redefine-sym dis_memory=ppc_64_dis_memory --redefine-sym dis_fault=ppc_64_dis_fault
translate-ppc_64.o: $(QEMUROOT)/target-ppc/translate.c
	$(CC) $(TARGETCFLAGS_ppc_64) $(QEMUROOT)/target-ppc/translate.c -c -o translate-ppc_64.o
tcg-ppc_64.o: $(QEMUROOT)/tcg/tcg.c
	$(CC) $(TARGETCFLAGS_ppc_64) $(QEMUROOT)/tcg/tcg.c -c -o tcg-ppc_64.o
optimize-ppc_64.o: $(QEMUROOT)/tcg/optimize.c
	$(CC) $(TARGETCFLAGS_ppc_64) $(QEMUROOT)/tcg/optimize.c -c -o optimize-ppc_64.o
ppc-dis-ppc_64.o: $(QEMUROOT)/ppc-dis.c
	$(CC) $(TARGETCFLAGS_ppc_64) $(QEMUROOT)/ppc-dis.c -c -o ppc-dis-ppc_64.o
qemu-stubs-ppc_64.o: qemu-stubs.c
	$(CC) $(TARGETCFLAGS_ppc_64) qemu-stubs.c -c -o qemu-stubs-ppc_64.o
target-ppc-ppc_64.o: target-ppc.c
	$(CC) $(TARGETCFLAGS_ppc_64) target-ppc.c -c -o target-ppc-ppc_64.o
ppc_64-unstripped.o: translate-ppc_64.o tcg-ppc_64.o optimize-ppc_64.o ppc-dis-ppc_64.o qemu-stubs-ppc_64.o target-ppc-ppc_64.o
	$(LD) -r translate-ppc_64.o tcg-ppc_64.o optimize-ppc_64.o ppc-dis-ppc_64.o qemu-stubs-ppc_64.o target-ppc-ppc_64.o -o ppc_64-unstripped.o
ppc_64-module.o: ppc_64-unstripped.o
	$(OBJCOPY) -G ppc_64_create $(RENAME_SYMBOLS_ppc_64) ppc_64-unstripped.o ppc_64-module.o

# target: alpha (target-alpha)
TARGETCFLAGS_alpha=$(CFLAGS) -I$(QEMUROOT)/target-alpha -DNEED_CPU_H -w -DTARGET=alpha -DTARGET_ALPHA
RENAME_SYMBOLS_alpha=--redefine-sym dis_size=alpha_dis_size --redefine-sym gen_opc_instr_start=alpha_gen_opc_instr_start --redefine-sym gen_opc_pc=alpha_gen_opc_pc --redefine-sym tcg_ctx=alpha_tcg_ctx --redefine-sym dis_offset=alpha_dis_offset --redefine-sym gen_opc_icount=alpha_gen_opc_icount --redefine-sym dis_memory=alpha_dis_memory --redefine-sym dis_fault=alpha_dis_fault
translate-alpha.o: $(QEMUROOT)/target-alpha/translate.c
	$(CC) $(TARGETCFLAGS_alpha) $(QEMUROOT)/target-alpha/translate.c -c -o translate-alpha.o
tcg-alpha.o: $(QEMUROOT)/tcg/tcg.c
	$(CC) $(TARGETCFLAGS_alpha) $(QEMUROOT)/tcg/tcg.c -c -o tcg-alpha.o
optimize-alpha.o: $(QEMUROOT)/tcg/optimize.c
	$(CC) $(TARGETCFLAGS_alpha) $(QEMUROOT)/tcg/optimize.c -c -o optimize-alpha.o
alpha-dis-alpha.o: $(QEMUROOT)/alpha-dis.c
	$(CC) $(TARGETCFLAGS_alpha) $(QEMUROOT)/alpha-dis.c -c -o alpha-dis-alpha.o
qemu-stubs-alpha.o: qemu-stubs.c
	$(CC) $(TARGETCFLAGS_alpha) qemu-stubs.c -c -o qemu-stubs-alpha.o
target-alpha-alpha.o: target-alpha.c
	$(CC) $(TARGETCFLAGS_alpha) target-alpha.c -c -o target-alpha-alpha.o
alpha-unstripped.o: translate-alpha.o tcg-alpha.o optimize-alpha.o alpha-dis-alpha.o qemu-stubs-alpha.o target-alpha-alpha.o
	$(LD) -r translate-alpha.o tcg-alpha.o optimize-alpha.o alpha-dis-alpha.o qemu-stubs-alpha.o target-alpha-alpha.o -o alpha-unstripped.o
alpha-module.o: alpha-unstripped.o
	$(OBJCOPY) -G alpha_create $(RENAME_SYMBOLS_alpha) alpha-unstripped.o alpha-module.o

# target: m68k (target-m68k)
TARGETCFLAGS_m68k=$(CFLAGS) -I$(QEMUROOT)/target-m68k -DNEED_CPU_H -w -DTARGET=m68k -DTARGET_M68K
RENAME_SYMBOLS_m68k=--redefine-sym dis_size=m68k_dis_size --redefine-sym gen_opc_instr_start=m68k_gen_opc_instr_start --redefine-sym gen_opc_pc=m68k_gen_opc_pc --redefine-sym tcg_ctx=m68k_tcg_ctx --redefine-sym dis_offset=m68k_dis_offset --redefine-sym gen_opc_icount=m68k_gen_opc_icount --redefine-sym dis_memory=m68k_dis_memory --redefine-sym dis_fault=m68k_dis_fault
translate-m68k.o: $(QEMUROOT)/target-m68k/translate.c
	$(CC) $(TARGETCFLAGS_m68k) $(QEMUROOT)/target-m68k/translate.c -c -o translate-m68k.o
tcg-m68k.o: $(QEMUROOT)/tcg/tcg.c
	$(CC) $(TARGETCFLAGS_m68k) $(QEMUROOT)/tcg/tcg.c -c -o tcg-m68k.o
optimize-m68k.o: $(QEMUROOT)/tcg/optimize.c
	$(CC) $(TARGETCFLAGS_m68k) $(QEMUROOT)/tcg/optimize.c -c -o optimize-m68k.o
m68k-dis-m68k.o: $(QEMUROOT)/m68k-dis.c
	$(CC) $(TARGETCFLAGS_m68k) $(QEMUROOT)/m68k-dis.c -c -o m68k-dis-m68k.o
qemu-stubs-m68k.o: qemu-stubs.c
	$(CC) $(TARGETCFLAGS_m68k) qemu-stubs.c -c -o qemu-stubs-m68k.o
target-m68k-m68k.o: target-m68k.c
	$(CC) $(TARGETCFLAGS_m68k) target-m68k.c -c -o target-m68k-m68k.o
m68k-unstripped.o: translate-m68k.o tcg-m68k.o optimize-m68k.o m68k-dis-m68k.o qemu-stubs-m68k.o target-m68k-m68k.o
	$(LD) -r translate-m68k.o tcg-m68k.o optimize-m68k.o m68k-dis-m68k.o qemu-stubs-m68k.o target-m68k-m68k.o -o m68k-unstripped.o
m68k-module.o: m68k-unstripped.o
	$(OBJCOPY) -G m68k_create $(RENAME_SYMBOLS_m68k) m68k-unstripped.o m68k-module.o

# target: sparc_32 (target-sparc)
TARGETCFLAGS_sparc_32=$(CFLAGS) -I$(QEMUROOT)/target-sparc -DNEED_CPU_H -w -DTARGET=sparc_32 -DTARGET_SPARC
RENAME_SYMBOLS_sparc_32=--redefine-sym dis_size=sparc_32_dis_size --redefine-sym gen_opc_instr_start=sparc_32_gen_opc_instr_start --redefine-sym gen_opc_pc=sparc_32_gen_opc_pc --redefine-sym tcg_ctx=sparc_32_tcg_ctx --redefine-sym dis_offset=sparc_32_dis_offset --redefine-sym gen_opc_icount=sparc_32_gen_opc_icount --redefine-sym dis_memory=sparc_32_dis_memory --redefine-sym dis_fault=sparc_32_dis_fault
translate-sparc_32.o: $(QEMUROOT)/target-sparc/translate.c
	$(CC) $(TARGETCFLAGS_sparc_32) $(QEMUROOT)/target-sparc/translate.c -c -o translate-sparc_32.o
tcg-sparc_32.o: $(QEMUROOT)/tcg/tcg.c
	$(CC) $(TARGETCFLAGS_sparc_32) $(QEMUROOT)/tcg/tcg.c -c -o tcg-sparc_32.o
optimize-sparc_32.o: $(QEMUROOT)/tcg/optimize.c
	$(CC) $(TARGETCFLAGS_sparc_32) $(QEMUROOT)/tcg/optimize.c -c -o optimize-sparc_32.o
sparc-dis-sparc_32.o: $(QEMUROOT)/sparc-dis.c
	$(CC) $(TARGETCFLAGS_sparc_32) $(QEMUROOT)/sparc-dis.c -c -o sparc-dis-sparc_32.o
qemu-stubs-sparc_32.o: qemu-stubs.c
	$(CC) $(TARGETCFLAGS_sparc_32) qemu-stubs.c -c -o qemu-stubs-sparc_32.o
target-sparc-sparc_32.o: target-sparc.c
	$(CC) $(TARGETCFLAGS_sparc_32) target-sparc.c -c -o target-sparc-sparc_32.o
sparc_32-unstripped.o: translate-sparc_32.o tcg-sparc_32.o optimize-sparc_32.o sparc-dis-sparc_32.o qemu-stubs-sparc_32.o target-sparc-sparc_32.o
	$(LD) -r translate-sparc_32.o tcg-sparc_32.o optimize-sparc_32.o sparc-dis-sparc_32.o qemu-stubs-sparc_32.o target-sparc-sparc_32.o -o sparc_32-unstripped.o
sparc_32-module.o: sparc_32-unstripped.o
	$(OBJCOPY) -G sparc_32_create $(RENAME_SYMBOLS_sparc_32) sparc_32-unstripped.o sparc_32-module.o

# target: sparc_64 (target-sparc)
TARGETCFLAGS_sparc_64=$(CFLAGS) -I$(QEMUROOT)/target-sparc -DNEED_CPU_H -w -DTARGET=sparc_64 -DTARGET_SPARC -DTARGET_SPARC64
RENAME_SYMBOLS_sparc_64=--redefine-sym dis_size=sparc_64_dis_size --redefine-sym gen_opc_instr_start=sparc_64_gen_opc_instr_start --redefine-sym gen_opc_pc=sparc_64_gen_opc_pc --redefine-sym tcg_ctx=sparc_64_tcg_ctx --redefine-sym dis_offset=sparc_64_dis_offset --redefine-sym gen_opc_icount=sparc_64_gen_opc_icount --redefine-sym dis_memory=sparc_64_dis_memory --redefine-sym dis_fault=sparc_64_dis_fault
translate-sparc_64.o: $(QEMUROOT)/target-sparc/translate.c
	$(CC) $(TARGETCFLAGS_sparc_64) $(QEMUROOT)/target-sparc/translate.c -c -o translate-sparc_64.o
tcg-sparc_64.o: $(QEMUROOT)/tcg/tcg.c
	$(CC) $(TARGETCFLAGS_sparc_64) $(QEMUROOT)/tcg/tcg.c -c -o tcg-sparc_64.o
optimize-sparc_64.o: $(QEMUROOT)/tcg/optimize.c
	$(CC) $(TARGETCFLAGS_sparc_64) $(QEMUROOT)/tcg/optimize.c -c -o optimize-sparc_64.o
sparc-dis-sparc_64.o: $(QEMUROOT)/sparc-dis.c
	$(CC) $(TARGETCFLAGS_sparc_64) $(QEMUROOT)/sparc-dis.c -c -o sparc-dis-sparc_64.o
qemu-stubs-sparc_64.o: qemu-stubs.c
	$(CC) $(TARGETCFLAGS_sparc_64) qemu-stubs.c -c -o qemu-stubs-sparc_64.o
target-sparc-sparc_64.o: target-sparc.c
	$(CC) $(TARGETCFLAGS_sparc_64) target-sparc.c -c -o target-sparc-sparc_64.o
sparc_64-unstripped.o: translate-sparc_64.o tcg-sparc_64.o optimize-sparc_64.o sparc-dis-sparc_64.o qemu-stubs-sparc_64.o target-sparc-sparc_64.o
	$(LD) -r translate-sparc_64.o tcg-sparc_64.o optimize-sparc_64.o sparc-dis-sparc_64.o qemu-stubs-sparc_64.o target-sparc-sparc_64.o -o sparc_64-unstripped.o
sparc_64-module.o: sparc_64-unstripped.o
	$(OBJCOPY) -G sparc_64_create $(RENAME_SYMBOLS_sparc_64) sparc_64-unstripped.o sparc_64-module.o

MODULES=arm-module.o x86_32-module.o x86_64-module.o mips_64-module.o ppc_32-module.o ppc_64-module.o alpha-module.o m68k-module.o sparc_32-module.o sparc_64-module.o
